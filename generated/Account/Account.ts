// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get spaceId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CancelAccount extends ethereum.Event {
  get params(): CancelAccount__Params {
    return new CancelAccount__Params(this);
  }
}

export class CancelAccount__Params {
  _event: CancelAccount;

  constructor(event: CancelAccount) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CancelLikeMoment extends ethereum.Event {
  get params(): CancelLikeMoment__Params {
    return new CancelLikeMoment__Params(this);
  }
}

export class CancelLikeMoment__Params {
  _event: CancelLikeMoment;

  constructor(event: CancelLikeMoment) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get momentId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CreateAccount extends ethereum.Event {
  get params(): CreateAccount__Params {
    return new CreateAccount__Params(this);
  }
}

export class CreateAccount__Params {
  _event: CreateAccount;

  constructor(event: CreateAccount) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get primarySpaceId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get primaryDomainName(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get avatarURI(): string {
    return this._event.parameters[3].value.toString();
  }

  get wallet(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class CreateComment extends ethereum.Event {
  get params(): CreateComment__Params {
    return new CreateComment__Params(this);
  }
}

export class CreateComment__Params {
  _event: CreateComment;

  constructor(event: CreateComment) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get momentId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get commentId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get commentText(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class CreateMoment extends ethereum.Event {
  get params(): CreateMoment__Params {
    return new CreateMoment__Params(this);
  }
}

export class CreateMoment__Params {
  _event: CreateMoment;

  constructor(event: CreateMoment) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get momentId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get metadataURI(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class CreateSubSpaceDomain extends ethereum.Event {
  get params(): CreateSubSpaceDomain__Params {
    return new CreateSubSpaceDomain__Params(this);
  }
}

export class CreateSubSpaceDomain__Params {
  _event: CreateSubSpaceDomain;

  constructor(event: CreateSubSpaceDomain) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get primarySpaceId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get subSpaceId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get expireSeconds(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get subDomainName(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LikeMoment extends ethereum.Event {
  get params(): LikeMoment__Params {
    return new LikeMoment__Params(this);
  }
}

export class LikeMoment__Params {
  _event: LikeMoment;

  constructor(event: LikeMoment) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get momentId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RemoveComment extends ethereum.Event {
  get params(): RemoveComment__Params {
    return new RemoveComment__Params(this);
  }
}

export class RemoveComment__Params {
  _event: RemoveComment;

  constructor(event: RemoveComment) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get commentId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RemoveMoment extends ethereum.Event {
  get params(): RemoveMoment__Params {
    return new RemoveMoment__Params(this);
  }
}

export class RemoveMoment__Params {
  _event: RemoveMoment;

  constructor(event: RemoveMoment) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get momentId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RentSpace extends ethereum.Event {
  get params(): RentSpace__Params {
    return new RentSpace__Params(this);
  }
}

export class RentSpace__Params {
  _event: RentSpace;

  constructor(event: RentSpace) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get spaceId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ReturnSpace extends ethereum.Event {
  get params(): ReturnSpace__Params {
    return new ReturnSpace__Params(this);
  }
}

export class ReturnSpace__Params {
  _event: ReturnSpace;

  constructor(event: ReturnSpace) {
    this._event = event;
  }

  get userId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get spaceId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetBeneficiary extends ethereum.Event {
  get params(): SetBeneficiary__Params {
    return new SetBeneficiary__Params(this);
  }
}

export class SetBeneficiary__Params {
  _event: SetBeneficiary;

  constructor(event: SetBeneficiary) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetMintFee extends ethereum.Event {
  get params(): SetMintFee__Params {
    return new SetMintFee__Params(this);
  }
}

export class SetMintFee__Params {
  _event: SetMintFee;

  constructor(event: SetMintFee) {
    this._event = event;
  }

  get mintFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetSubSpaceDomainLimit extends ethereum.Event {
  get params(): SetSubSpaceDomainLimit__Params {
    return new SetSubSpaceDomainLimit__Params(this);
  }
}

export class SetSubSpaceDomainLimit__Params {
  _event: SetSubSpaceDomainLimit;

  constructor(event: SetSubSpaceDomainLimit) {
    this._event = event;
  }

  get limit(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UpdateAvatarURI extends ethereum.Event {
  get params(): UpdateAvatarURI__Params {
    return new UpdateAvatarURI__Params(this);
  }
}

export class UpdateAvatarURI__Params {
  _event: UpdateAvatarURI;

  constructor(event: UpdateAvatarURI) {
    this._event = event;
  }

  get accountId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get avatarURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class UpdateExpireSeconds extends ethereum.Event {
  get params(): UpdateExpireSeconds__Params {
    return new UpdateExpireSeconds__Params(this);
  }
}

export class UpdateExpireSeconds__Params {
  _event: UpdateExpireSeconds;

  constructor(event: UpdateExpireSeconds) {
    this._event = event;
  }

  get spaceId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get expireSeconds(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdateRentedSpaceDomainName extends ethereum.Event {
  get params(): UpdateRentedSpaceDomainName__Params {
    return new UpdateRentedSpaceDomainName__Params(this);
  }
}

export class UpdateRentedSpaceDomainName__Params {
  _event: UpdateRentedSpaceDomainName;

  constructor(event: UpdateRentedSpaceDomainName) {
    this._event = event;
  }

  get spaceId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get domainName(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Account__batchGetAccountDataResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get momentIds(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get createdSpaceIds(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get rentedSpaceIds(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class Account__checkSpaceCreatorResult {
  value0: boolean;
  value1: Address;

  constructor(value0: boolean, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }
}

export class Account__getAccountDataResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get momentIds(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get createdSpaceIds(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get rentedSpaceIds(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class Account extends ethereum.SmartContract {
  static bind(address: Address): Account {
    return new Account("Account", address);
  }

  accountIds(param0: Address): BigInt {
    let result = super.call("accountIds", "accountIds(address):(uint64)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_accountIds(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("accountIds", "accountIds(address):(uint64)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  accounts(param0: BigInt): Address {
    let result = super.call("accounts", "accounts(uint64):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_accounts(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("accounts", "accounts(uint64):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  batchGetAccountData(
    accountIdArray: Array<BigInt>
  ): Array<Account__batchGetAccountDataResultValue0Struct> {
    let result = super.call(
      "batchGetAccountData",
      "batchGetAccountData(uint64[]):((address,uint120[],uint64[],uint64[])[])",
      [ethereum.Value.fromUnsignedBigIntArray(accountIdArray)]
    );

    return result[0].toTupleArray<
      Account__batchGetAccountDataResultValue0Struct
    >();
  }

  try_batchGetAccountData(
    accountIdArray: Array<BigInt>
  ): ethereum.CallResult<
    Array<Account__batchGetAccountDataResultValue0Struct>
  > {
    let result = super.tryCall(
      "batchGetAccountData",
      "batchGetAccountData(uint64[]):((address,uint120[],uint64[],uint64[])[])",
      [ethereum.Value.fromUnsignedBigIntArray(accountIdArray)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Account__batchGetAccountDataResultValue0Struct>()
    );
  }

  batchGetAccountId(addressArray: Array<Address>): Array<BigInt> {
    let result = super.call(
      "batchGetAccountId",
      "batchGetAccountId(address[]):(uint64[])",
      [ethereum.Value.fromAddressArray(addressArray)]
    );

    return result[0].toBigIntArray();
  }

  try_batchGetAccountId(
    addressArray: Array<Address>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "batchGetAccountId",
      "batchGetAccountId(address[]):(uint64[])",
      [ethereum.Value.fromAddressArray(addressArray)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  batchGetAddress(accountIdArray: Array<BigInt>): Array<Address> {
    let result = super.call(
      "batchGetAddress",
      "batchGetAddress(uint64[]):(address[])",
      [ethereum.Value.fromUnsignedBigIntArray(accountIdArray)]
    );

    return result[0].toAddressArray();
  }

  try_batchGetAddress(
    accountIdArray: Array<BigInt>
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "batchGetAddress",
      "batchGetAddress(uint64[]):(address[])",
      [ethereum.Value.fromUnsignedBigIntArray(accountIdArray)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  beneficiary(): Address {
    let result = super.call("beneficiary", "beneficiary():(address)", []);

    return result[0].toAddress();
  }

  try_beneficiary(): ethereum.CallResult<Address> {
    let result = super.tryCall("beneficiary", "beneficiary():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  checkSpaceCreator(spaceId: BigInt): Account__checkSpaceCreatorResult {
    let result = super.call(
      "checkSpaceCreator",
      "checkSpaceCreator(uint64):(bool,address)",
      [ethereum.Value.fromUnsignedBigInt(spaceId)]
    );

    return new Account__checkSpaceCreatorResult(
      result[0].toBoolean(),
      result[1].toAddress()
    );
  }

  try_checkSpaceCreator(
    spaceId: BigInt
  ): ethereum.CallResult<Account__checkSpaceCreatorResult> {
    let result = super.tryCall(
      "checkSpaceCreator",
      "checkSpaceCreator(uint64):(bool,address)",
      [ethereum.Value.fromUnsignedBigInt(spaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Account__checkSpaceCreatorResult(
        value[0].toBoolean(),
        value[1].toAddress()
      )
    );
  }

  createAccount(domainName: string, avatarURI: string): BigInt {
    let result = super.call(
      "createAccount",
      "createAccount(string,string):(uint64)",
      [
        ethereum.Value.fromString(domainName),
        ethereum.Value.fromString(avatarURI)
      ]
    );

    return result[0].toBigInt();
  }

  try_createAccount(
    domainName: string,
    avatarURI: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createAccount",
      "createAccount(string,string):(uint64)",
      [
        ethereum.Value.fromString(domainName),
        ethereum.Value.fromString(avatarURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createSubSpaceDomain(
    primarySpaceId: BigInt,
    domainName: string,
    expireSeconds: BigInt
  ): BigInt {
    let result = super.call(
      "createSubSpaceDomain",
      "createSubSpaceDomain(uint64,string,uint64):(uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(primarySpaceId),
        ethereum.Value.fromString(domainName),
        ethereum.Value.fromUnsignedBigInt(expireSeconds)
      ]
    );

    return result[0].toBigInt();
  }

  try_createSubSpaceDomain(
    primarySpaceId: BigInt,
    domainName: string,
    expireSeconds: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createSubSpaceDomain",
      "createSubSpaceDomain(uint64,string,uint64):(uint64)",
      [
        ethereum.Value.fromUnsignedBigInt(primarySpaceId),
        ethereum.Value.fromString(domainName),
        ethereum.Value.fromUnsignedBigInt(expireSeconds)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAccountData(accountId: BigInt): Account__getAccountDataResultValue0Struct {
    let result = super.call(
      "getAccountData",
      "getAccountData(uint64):((address,uint120[],uint64[],uint64[]))",
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );

    return changetype<Account__getAccountDataResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAccountData(
    accountId: BigInt
  ): ethereum.CallResult<Account__getAccountDataResultValue0Struct> {
    let result = super.tryCall(
      "getAccountData",
      "getAccountData(uint64):((address,uint120[],uint64[],uint64[]))",
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Account__getAccountDataResultValue0Struct>(value[0].toTuple())
    );
  }

  getApproved(spaceId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint64):(address)", [
      ethereum.Value.fromUnsignedBigInt(spaceId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(spaceId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("getApproved", "getApproved(uint64):(address)", [
      ethereum.Value.fromUnsignedBigInt(spaceId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCreatedSpaceIds(accountId: BigInt): Array<BigInt> {
    let result = super.call(
      "getCreatedSpaceIds",
      "getCreatedSpaceIds(uint64):(uint64[])",
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );

    return result[0].toBigIntArray();
  }

  try_getCreatedSpaceIds(
    accountId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getCreatedSpaceIds",
      "getCreatedSpaceIds(uint64):(uint64[])",
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getRentedSpaceIds(accountId: BigInt): Array<BigInt> {
    let result = super.call(
      "getRentedSpaceIds",
      "getRentedSpaceIds(uint64):(uint64[])",
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );

    return result[0].toBigIntArray();
  }

  try_getRentedSpaceIds(accountId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getRentedSpaceIds",
      "getRentedSpaceIds(uint64):(uint64[])",
      [ethereum.Value.fromUnsignedBigInt(accountId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  mintFee(): BigInt {
    let result = super.call("mintFee", "mintFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_mintFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mintFee", "mintFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  moment(): Address {
    let result = super.call("moment", "moment():(address)", []);

    return result[0].toAddress();
  }

  try_moment(): ethereum.CallResult<Address> {
    let result = super.tryCall("moment", "moment():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  spaceFNS(): Address {
    let result = super.call("spaceFNS", "spaceFNS():(address)", []);

    return result[0].toAddress();
  }

  try_spaceFNS(): ethereum.CallResult<Address> {
    let result = super.tryCall("spaceFNS", "spaceFNS():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  subSpaceDomainLimit(): BigInt {
    let result = super.call(
      "subSpaceDomainLimit",
      "subSpaceDomainLimit():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_subSpaceDomainLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "subSpaceDomainLimit",
      "subSpaceDomainLimit():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalAccountCount(): BigInt {
    let result = super.call(
      "totalAccountCount",
      "totalAccountCount():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalAccountCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalAccountCount",
      "totalAccountCount():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get spaceId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class CancelAccountCall extends ethereum.Call {
  get inputs(): CancelAccountCall__Inputs {
    return new CancelAccountCall__Inputs(this);
  }

  get outputs(): CancelAccountCall__Outputs {
    return new CancelAccountCall__Outputs(this);
  }
}

export class CancelAccountCall__Inputs {
  _call: CancelAccountCall;

  constructor(call: CancelAccountCall) {
    this._call = call;
  }
}

export class CancelAccountCall__Outputs {
  _call: CancelAccountCall;

  constructor(call: CancelAccountCall) {
    this._call = call;
  }
}

export class CancelLikeMomentCall extends ethereum.Call {
  get inputs(): CancelLikeMomentCall__Inputs {
    return new CancelLikeMomentCall__Inputs(this);
  }

  get outputs(): CancelLikeMomentCall__Outputs {
    return new CancelLikeMomentCall__Outputs(this);
  }
}

export class CancelLikeMomentCall__Inputs {
  _call: CancelLikeMomentCall;

  constructor(call: CancelLikeMomentCall) {
    this._call = call;
  }

  get momentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelLikeMomentCall__Outputs {
  _call: CancelLikeMomentCall;

  constructor(call: CancelLikeMomentCall) {
    this._call = call;
  }
}

export class CreateAccountCall extends ethereum.Call {
  get inputs(): CreateAccountCall__Inputs {
    return new CreateAccountCall__Inputs(this);
  }

  get outputs(): CreateAccountCall__Outputs {
    return new CreateAccountCall__Outputs(this);
  }
}

export class CreateAccountCall__Inputs {
  _call: CreateAccountCall;

  constructor(call: CreateAccountCall) {
    this._call = call;
  }

  get domainName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get avatarURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateAccountCall__Outputs {
  _call: CreateAccountCall;

  constructor(call: CreateAccountCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateCommentCall extends ethereum.Call {
  get inputs(): CreateCommentCall__Inputs {
    return new CreateCommentCall__Inputs(this);
  }

  get outputs(): CreateCommentCall__Outputs {
    return new CreateCommentCall__Outputs(this);
  }
}

export class CreateCommentCall__Inputs {
  _call: CreateCommentCall;

  constructor(call: CreateCommentCall) {
    this._call = call;
  }

  get momentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get commentText(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateCommentCall__Outputs {
  _call: CreateCommentCall;

  constructor(call: CreateCommentCall) {
    this._call = call;
  }
}

export class CreateMomentCall extends ethereum.Call {
  get inputs(): CreateMomentCall__Inputs {
    return new CreateMomentCall__Inputs(this);
  }

  get outputs(): CreateMomentCall__Outputs {
    return new CreateMomentCall__Outputs(this);
  }
}

export class CreateMomentCall__Inputs {
  _call: CreateMomentCall;

  constructor(call: CreateMomentCall) {
    this._call = call;
  }

  get metadataURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CreateMomentCall__Outputs {
  _call: CreateMomentCall;

  constructor(call: CreateMomentCall) {
    this._call = call;
  }
}

export class CreateSubSpaceDomainCall extends ethereum.Call {
  get inputs(): CreateSubSpaceDomainCall__Inputs {
    return new CreateSubSpaceDomainCall__Inputs(this);
  }

  get outputs(): CreateSubSpaceDomainCall__Outputs {
    return new CreateSubSpaceDomainCall__Outputs(this);
  }
}

export class CreateSubSpaceDomainCall__Inputs {
  _call: CreateSubSpaceDomainCall;

  constructor(call: CreateSubSpaceDomainCall) {
    this._call = call;
  }

  get primarySpaceId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get domainName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get expireSeconds(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateSubSpaceDomainCall__Outputs {
  _call: CreateSubSpaceDomainCall;

  constructor(call: CreateSubSpaceDomainCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _moment(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _spaceFNS(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class LikeMomentCall extends ethereum.Call {
  get inputs(): LikeMomentCall__Inputs {
    return new LikeMomentCall__Inputs(this);
  }

  get outputs(): LikeMomentCall__Outputs {
    return new LikeMomentCall__Outputs(this);
  }
}

export class LikeMomentCall__Inputs {
  _call: LikeMomentCall;

  constructor(call: LikeMomentCall) {
    this._call = call;
  }

  get momentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LikeMomentCall__Outputs {
  _call: LikeMomentCall;

  constructor(call: LikeMomentCall) {
    this._call = call;
  }
}

export class RemoveCommentCall extends ethereum.Call {
  get inputs(): RemoveCommentCall__Inputs {
    return new RemoveCommentCall__Inputs(this);
  }

  get outputs(): RemoveCommentCall__Outputs {
    return new RemoveCommentCall__Outputs(this);
  }
}

export class RemoveCommentCall__Inputs {
  _call: RemoveCommentCall;

  constructor(call: RemoveCommentCall) {
    this._call = call;
  }

  get commentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveCommentCall__Outputs {
  _call: RemoveCommentCall;

  constructor(call: RemoveCommentCall) {
    this._call = call;
  }
}

export class RemoveMomentCall extends ethereum.Call {
  get inputs(): RemoveMomentCall__Inputs {
    return new RemoveMomentCall__Inputs(this);
  }

  get outputs(): RemoveMomentCall__Outputs {
    return new RemoveMomentCall__Outputs(this);
  }
}

export class RemoveMomentCall__Inputs {
  _call: RemoveMomentCall;

  constructor(call: RemoveMomentCall) {
    this._call = call;
  }

  get momentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveMomentCall__Outputs {
  _call: RemoveMomentCall;

  constructor(call: RemoveMomentCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RentSpaceCall extends ethereum.Call {
  get inputs(): RentSpaceCall__Inputs {
    return new RentSpaceCall__Inputs(this);
  }

  get outputs(): RentSpaceCall__Outputs {
    return new RentSpaceCall__Outputs(this);
  }
}

export class RentSpaceCall__Inputs {
  _call: RentSpaceCall;

  constructor(call: RentSpaceCall) {
    this._call = call;
  }

  get userId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get spaceId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RentSpaceCall__Outputs {
  _call: RentSpaceCall;

  constructor(call: RentSpaceCall) {
    this._call = call;
  }
}

export class ReturnSpaceCall extends ethereum.Call {
  get inputs(): ReturnSpaceCall__Inputs {
    return new ReturnSpaceCall__Inputs(this);
  }

  get outputs(): ReturnSpaceCall__Outputs {
    return new ReturnSpaceCall__Outputs(this);
  }
}

export class ReturnSpaceCall__Inputs {
  _call: ReturnSpaceCall;

  constructor(call: ReturnSpaceCall) {
    this._call = call;
  }

  get userId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get spaceId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ReturnSpaceCall__Outputs {
  _call: ReturnSpaceCall;

  constructor(call: ReturnSpaceCall) {
    this._call = call;
  }
}

export class SetBeneficiaryCall extends ethereum.Call {
  get inputs(): SetBeneficiaryCall__Inputs {
    return new SetBeneficiaryCall__Inputs(this);
  }

  get outputs(): SetBeneficiaryCall__Outputs {
    return new SetBeneficiaryCall__Outputs(this);
  }
}

export class SetBeneficiaryCall__Inputs {
  _call: SetBeneficiaryCall;

  constructor(call: SetBeneficiaryCall) {
    this._call = call;
  }

  get _beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBeneficiaryCall__Outputs {
  _call: SetBeneficiaryCall;

  constructor(call: SetBeneficiaryCall) {
    this._call = call;
  }
}

export class SetMintFeeCall extends ethereum.Call {
  get inputs(): SetMintFeeCall__Inputs {
    return new SetMintFeeCall__Inputs(this);
  }

  get outputs(): SetMintFeeCall__Outputs {
    return new SetMintFeeCall__Outputs(this);
  }
}

export class SetMintFeeCall__Inputs {
  _call: SetMintFeeCall;

  constructor(call: SetMintFeeCall) {
    this._call = call;
  }

  get _mintFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMintFeeCall__Outputs {
  _call: SetMintFeeCall;

  constructor(call: SetMintFeeCall) {
    this._call = call;
  }
}

export class SetSubSpaceDomainLimitCall extends ethereum.Call {
  get inputs(): SetSubSpaceDomainLimitCall__Inputs {
    return new SetSubSpaceDomainLimitCall__Inputs(this);
  }

  get outputs(): SetSubSpaceDomainLimitCall__Outputs {
    return new SetSubSpaceDomainLimitCall__Outputs(this);
  }
}

export class SetSubSpaceDomainLimitCall__Inputs {
  _call: SetSubSpaceDomainLimitCall;

  constructor(call: SetSubSpaceDomainLimitCall) {
    this._call = call;
  }

  get limit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSubSpaceDomainLimitCall__Outputs {
  _call: SetSubSpaceDomainLimitCall;

  constructor(call: SetSubSpaceDomainLimitCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateAvatarURICall extends ethereum.Call {
  get inputs(): UpdateAvatarURICall__Inputs {
    return new UpdateAvatarURICall__Inputs(this);
  }

  get outputs(): UpdateAvatarURICall__Outputs {
    return new UpdateAvatarURICall__Outputs(this);
  }
}

export class UpdateAvatarURICall__Inputs {
  _call: UpdateAvatarURICall;

  constructor(call: UpdateAvatarURICall) {
    this._call = call;
  }

  get avatarURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UpdateAvatarURICall__Outputs {
  _call: UpdateAvatarURICall;

  constructor(call: UpdateAvatarURICall) {
    this._call = call;
  }
}

export class UpdateExpireSecondsCall extends ethereum.Call {
  get inputs(): UpdateExpireSecondsCall__Inputs {
    return new UpdateExpireSecondsCall__Inputs(this);
  }

  get outputs(): UpdateExpireSecondsCall__Outputs {
    return new UpdateExpireSecondsCall__Outputs(this);
  }
}

export class UpdateExpireSecondsCall__Inputs {
  _call: UpdateExpireSecondsCall;

  constructor(call: UpdateExpireSecondsCall) {
    this._call = call;
  }

  get spaceId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get expireSeconds(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateExpireSecondsCall__Outputs {
  _call: UpdateExpireSecondsCall;

  constructor(call: UpdateExpireSecondsCall) {
    this._call = call;
  }
}

export class UpdateRentedSpaceDomainNameCall extends ethereum.Call {
  get inputs(): UpdateRentedSpaceDomainNameCall__Inputs {
    return new UpdateRentedSpaceDomainNameCall__Inputs(this);
  }

  get outputs(): UpdateRentedSpaceDomainNameCall__Outputs {
    return new UpdateRentedSpaceDomainNameCall__Outputs(this);
  }
}

export class UpdateRentedSpaceDomainNameCall__Inputs {
  _call: UpdateRentedSpaceDomainNameCall;

  constructor(call: UpdateRentedSpaceDomainNameCall) {
    this._call = call;
  }

  get spaceId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get domainName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateRentedSpaceDomainNameCall__Outputs {
  _call: UpdateRentedSpaceDomainNameCall;

  constructor(call: UpdateRentedSpaceDomainNameCall) {
    this._call = call;
  }
}
